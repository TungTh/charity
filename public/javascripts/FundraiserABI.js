// Checking if Web3 has been injected by the browser (MetaMask)
if (typeof web3 !== 'undefined') {
    // Use MetaMask's provider
    web3 = new Web3(web3.currentProvider)
} else {
    // Handle the case where the user doesn't have web3. Probably 
    // show them a message telling them to install Metamask in 
    // order to use our app.
    // set the provider you want from Web3.providers
    web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"))
}

//Application Binary Interface or ABI definition of a
//smart contract is the list of the contractâ€™s functions and arguments in JSON format.
var fundraiserContract = web3.eth.contract([{ "constant": false, "inputs": [{ "name": "_destination", "type": "address" }], "name": "setDestination", "outputs": [{ "name": "res", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "ownerWidthdraw", "outputs": [{ "name": "res", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getDestination", "outputs": [{ "name": "result", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "total", "outputs": [{ "name": "_total", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "MAX_UINT256", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "withdraw", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getInfo", "outputs": [{ "name": "", "type": "address" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "bool" }, { "name": "", "type": "bool" }, { "name": "", "type": "bool" }, { "name": "", "type": "bool" }, { "name": "", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "isOwner", "outputs": [{ "name": "res", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_donator", "type": "address" }], "name": "isIn", "outputs": [{ "name": "ok", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "getDonators", "outputs": [{ "name": "list", "type": "address[]" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "_donator", "type": "address" }], "name": "getDonationOf", "outputs": [{ "name": "", "type": "address" }, { "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_value", "type": "uint256" }], "name": "donate", "outputs": [{ "name": "res", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_fund", "type": "address" }, { "name": "_reward", "type": "address" }, { "name": "_happy", "type": "address" }], "name": "open", "outputs": [{ "name": "succes", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "open", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "inputs": [{ "name": "_name", "type": "string" }, { "name": "_admin", "type": "address" }, { "name": "_goal", "type": "uint256" }, { "name": "_start", "type": "uint256" }, { "name": "_end", "type": "uint256" }], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "_address", "type": "address" }, { "indexed": false, "name": "amount", "type": "uint256" }, { "indexed": false, "name": "message", "type": "string" }, { "indexed": false, "name": "total", "type": "uint256" }], "name": "Notification", "type": "event" }]);
var fundtokenContract = web3.eth.contract([{ "constant": true, "inputs": [], "name": "name", "outputs": [{ "name": "_name", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "spender", "type": "address" }, { "name": "tokens", "type": "uint256" }], "name": "approve", "outputs": [{ "name": "success", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "totalSupply", "outputs": [{ "name": "_totalSupply", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "from", "type": "address" }, { "name": "to", "type": "address" }, { "name": "tokens", "type": "uint256" }], "name": "transferFrom", "outputs": [{ "name": "success", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "decimals", "outputs": [{ "name": "_decimals", "type": "uint8" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "MAX_UINT256", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "from", "type": "address" }, { "name": "tokens", "type": "uint256" }], "name": "useToken", "outputs": [{ "name": "ok", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "_owner", "type": "address" }], "name": "balanceOf", "outputs": [{ "name": "balance", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "symbol", "outputs": [{ "name": "_symbol", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "to", "type": "address" }, { "name": "tokens", "type": "uint256" }], "name": "transfer", "outputs": [{ "name": "success", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "tokenOwner", "type": "address" }, { "name": "spender", "type": "address" }], "name": "allowance", "outputs": [{ "name": "remaining", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_to", "type": "address" }, { "name": "_value", "type": "uint256" }], "name": "investToken", "outputs": [{ "name": "ok", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "from", "type": "address" }, { "indexed": true, "name": "to", "type": "address" }, { "indexed": false, "name": "tokens", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "tokenOwner", "type": "address" }, { "indexed": true, "name": "spender", "type": "address" }, { "indexed": false, "name": "tokens", "type": "uint256" }], "name": "Approval", "type": "event" }]);
var happytokenContract = web3.eth.contract([{ "constant": false, "inputs": [{ "name": "from", "type": "address" }, { "name": "_admin", "type": "address" }, { "name": "tokens", "type": "uint256" }], "name": "useToken", "outputs": [{ "name": "ok", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "name", "outputs": [{ "name": "_name", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "spender", "type": "address" }, { "name": "tokens", "type": "uint256" }], "name": "approve", "outputs": [{ "name": "success", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "totalSupply", "outputs": [{ "name": "_totalSupply", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "from", "type": "address" }, { "name": "to", "type": "address" }, { "name": "tokens", "type": "uint256" }], "name": "transferFrom", "outputs": [{ "name": "success", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "decimals", "outputs": [{ "name": "_decimals", "type": "uint8" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "MAX_UINT256", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "_owner", "type": "address" }], "name": "balanceOf", "outputs": [{ "name": "balance", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "symbol", "outputs": [{ "name": "_symbol", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "to", "type": "address" }, { "name": "tokens", "type": "uint256" }], "name": "transfer", "outputs": [{ "name": "success", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "tokenOwner", "type": "address" }, { "name": "spender", "type": "address" }], "name": "allowance", "outputs": [{ "name": "remaining", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "to", "type": "address" }, { "name": "tokens", "type": "uint256" }], "name": "investToken", "outputs": [{ "name": "ok", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "from", "type": "address" }, { "indexed": true, "name": "to", "type": "address" }, { "indexed": false, "name": "tokens", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "tokenOwner", "type": "address" }, { "indexed": true, "name": "spender", "type": "address" }, { "indexed": false, "name": "tokens", "type": "uint256" }], "name": "Approval", "type": "event" }]);
var adminContract = web3.eth.contract([{ "constant": true, "inputs": [], "name": "getInfo", "outputs": [{ "name": "", "type": "address[]" }, { "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_to", "type": "address" }, { "name": "_value", "type": "uint256" }], "name": "investTo", "outputs": [{ "name": "ok", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_openedList", "type": "address" }], "name": "isIn", "outputs": [{ "name": "ok", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_newOwner", "type": "address" }], "name": "newOnwer", "outputs": [{ "name": "ok", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_address", "type": "address" }], "name": "openFundraiser", "outputs": [{ "name": "ok", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "name": "_fund", "type": "address" }, { "name": "_reward", "type": "address" }, { "name": "_happy", "type": "address" }], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "_address", "type": "address" }, { "indexed": false, "name": "message", "type": "string" }], "name": "Notification", "type": "event" }]);

function toggle(id) {
    var x = document.getElementById(id);
    if (x.className.indexOf("w3-show") == -1) {
        x.className += " w3-show";
    } else {
        x.className = x.className.replace(" w3-show", "");
    }
}

var _admin = "0xacaa5f48fdc2a5e98ed0ea037cd6aee2bd4a13ff";
var _fund = "0x859d3f136251cad0a4332edaad9eab4e25f00a9b";
var _happy = "0x07edd004b48b59fc7b2e2a87db5264fc7ff82df8";
var _reward = "0x4d23d130ccbb10aa4b14112eea0f0a60e43070a1"

var admin = adminContract.at(_admin);
var fund = fundtokenContract.at(_fund);
var happy = happytokenContract.at(_happy);
var testABI = [{ "constant": true, "inputs": [], "name": "name", "outputs": [{ "name": "", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [], "name": "ownerWidthdraw", "outputs": [{ "name": "res", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "total", "outputs": [{ "name": "_total", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "MAX_UINT256", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "withdraw", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "goal", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getInfo", "outputs": [{ "name": "", "type": "address" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "bool" }, { "name": "", "type": "bool" }, { "name": "", "type": "bool" }, { "name": "", "type": "bool" }, { "name": "", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "owner", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_donator", "type": "address" }], "name": "isIn", "outputs": [{ "name": "ok", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "donator", "outputs": [{ "name": "", "type": "address" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "start", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getDonators", "outputs": [{ "name": "list", "type": "address[]" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "_donator", "type": "address" }], "name": "getDonationOf", "outputs": [{ "name": "", "type": "address" }, { "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "end", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_value", "type": "uint256" }], "name": "donate", "outputs": [{ "name": "res", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [{ "name": "_fund", "type": "address" }, { "name": "_reward", "type": "address" }, { "name": "_happy", "type": "address" }], "name": "open", "outputs": [{ "name": "succes", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "open", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "stateMutability": "view", "type": "function" }, { "inputs": [{ "name": "_name", "type": "string" }, { "name": "_admin", "type": "address" }, { "name": "_goal", "type": "uint256" }, { "name": "_start", "type": "uint256" }, { "name": "_end", "type": "uint256" }], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "_address", "type": "address" }, { "indexed": false, "name": "amount", "type": "uint256" }, { "indexed": false, "name": "message", "type": "string" }, { "indexed": false, "name": "total", "type": "uint256" }], "name": "Notification", "type": "event" }];
abiDecoder.addABI(testABI);

function deploy() {
    var _name = $("#title").val();;
    document.getElementById("deploy").style.visibility = "hidden";
    document.getElementById('address').value = "Please wait for contract to be mined......";
    var d = new Date();
    var n = d.getTimezoneOffset();
    var _goal = $("#goal").val();
    var _start = (+new Date($("#start").val())) / 1000 + n * 60;
    var _end = (+new Date($("#end").val())) / 1000 + n * 60 + 23 * 3600 + 3540;

    var fundraiser = fundraiserContract.new(
        _name,
        _admin,
        _goal,
        _start,
        _end, {
            from: web3.eth.accounts[0],
            data: '0x6080604052600a60035534801561001557600080fd5b50604051610d04380380610d04833981016040908152815160208084015192840151606085015160808601516002805433600160a060020a03199182168117909255600180548216909217909155600d8054909116600160a060020a038816179055939095018051909591939192610092916000918801906100b1565b5060049290925560055560065550506007805461ffff1916905561014c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100f257805160ff191683800117855561011f565b8280016001018555821561011f579182015b8281111561011f578251825591602001919060010190610104565b5061012b92915061012f565b5090565b61014991905b8082111561012b5760008155600101610135565b90565b610ba98061015b6000396000f3006080604052600436106100cf5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630a0a05e681146100d45780630b2bc2d01461010957806316ad95421461011e5780632ddbd13a1461014f57806333a581d2146101765780633ccfd60b1461018b5780635a9b0b89146101a05780638f32d59b1461028757806396210c511461029c578063bf1482fa146102bd578063dc5b2ee414610322578063f14faf6f14610366578063f71fd5961461037e578063fcfff16f146103ab575b600080fd5b3480156100e057600080fd5b506100f5600160a060020a03600435166103c0565b604080519115158252519081900360200190f35b34801561011557600080fd5b506100f5610409565b34801561012a57600080fd5b50610133610505565b60408051600160a060020a039092168252519081900360200190f35b34801561015b57600080fd5b50610164610514565b60408051918252519081900360200190f35b34801561018257600080fd5b5061016461051a565b34801561019757600080fd5b506100f5610520565b3480156101ac57600080fd5b506101b5610529565b60408051600160a060020a038c16815260208082018c90529181018a9052606081018990526080810188905286151560a082015285151560c082015284151560e0820152831515610100820152610140610120820181815284519183019190915283519192909161016084019185019080838360005b8381101561024357818101518382015260200161022b565b50505050905090810190601f1680156102705780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b34801561029357600080fd5b506100f561064d565b3480156102a857600080fd5b506100f5600160a060020a036004351661065e565b3480156102c957600080fd5b506102d26106bd565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561030e5781810151838201526020016102f6565b505050509050019250505060405180910390f35b34801561032e57600080fd5b50610343600160a060020a036004351661071f565b60408051600160a060020a03909316835260208301919091528051918290030190f35b34801561037257600080fd5b506100f560043561073c565b34801561038a57600080fd5b506100f5600160a060020a0360043581169060243581169060443516610ade565b3480156103b757600080fd5b506100f5610b57565b600254600090600160a060020a031633146103da57600080fd5b506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161781555b919050565b600754600090610100900460ff16151561042257600080fd5b60075460ff161561043257600080fd5b600254600160a060020a0316331461044957600080fd5b600b54600154600354604080517fde8971fc000000000000000000000000000000000000000000000000000000008152600160a060020a039384166004820152602481019290925251919092169163de8971fc9160448083019260209291908290030181600087803b1580156104be57600080fd5b505af11580156104d2573d6000803e3d6000fd5b505050506040513d60208110156104e857600080fd5b505060078054600160ff19909116811761ff001916909155919050565b600154600160a060020a031690565b60035490565b60001981565b60075460ff1681565b6000806000806000806000806000606060008060006005544210925060065442119150600554421015801561056057506006544211155b600280546003546004546005546006546007546000805460408051602061010060018516158102600019019094169b909b04601f81018c90048c0282018c019092528181529a9b50600160a060020a0390981699969895979496939590830460ff908116958e9591909416938c93928391908301828280156106235780601f106105f857610100808354040283529160200191610623565b820191906000526020600020905b81548152906001019060200180831161060657829003601f168201915b505050505090509c509c509c509c509c509c509c509c509c509c5050505090919293949596979899565b600254600160a060020a0316331490565b600080805b6008548110156106b65783600160a060020a031660088281548110151561068657fe5b600091825260209091200154600160a060020a031614156106aa57600191506106b6565b60009150600101610663565b5092915050565b6060600880548060200260200160405190810160405280929190818152602001828054801561071557602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116106f7575b5050505050905090565b600160a060020a0381166000908152600960205260409020549091565b6000600554421015801561075257506006544211155b1561040457600754610100900460ff16151561076d57600080fd5b6000821161077a57600080fd5b61078660035483610b65565b600355600a54604080517f519888e4000000000000000000000000000000000000000000000000000000008152336004820152602481018590529051600160a060020a039092169163519888e4916044808201926020929091908290030181600087803b1580156107f657600080fd5b505af115801561080a573d6000803e3d6000fd5b505050506040513d602081101561082057600080fd5b5061082c90503361065e565b151561099a57600c54604080517f8fb57fd5000000000000000000000000000000000000000000000000000000008152336004820152602481018590529051600160a060020a0390921691638fb57fd5916044808201926020929091908290030181600087803b15801561089f57600080fd5b505af11580156108b3573d6000803e3d6000fd5b505050506040513d60208110156108c957600080fd5b5050600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805473ffffffffffffffffffffffffffffffffffffffff1916339081179091556003546040805192835260208301859052606083019190915260808282018190526016908301527f726563696576656420726577617264656420636f696e0000000000000000000060a0830152517f85e6be6f1f04f3b2c8d71d9beed035e1fd055089404d656fd1c3126a577a14cc9181900360c00190a1610aac565b600c54604080517f8fb57fd5000000000000000000000000000000000000000000000000000000008152336004820152602481018590529051600160a060020a0390921691638fb57fd5916044808201926020929091908290030181600087803b158015610a0757600080fd5b505af1158015610a1b573d6000803e3d6000fd5b505050506040513d6020811015610a3157600080fd5b50506003546040805133815260208101859052606081019290925260808282018190526016908301527f726563696576656420726577617264656420636f696e0000000000000000000060a0830152517f85e6be6f1f04f3b2c8d71d9beed035e1fd055089404d656fd1c3126a577a14cc9181900360c00190a15b33600090815260096020526040902054610ac69083610b65565b33600090815260096020526040902055506001919050565b600d54600090600160a060020a03163314610af857600080fd5b50600a8054600160a060020a0394851673ffffffffffffffffffffffffffffffffffffffff1991821617909155600c805493851693821693909317909255600b80549190931691161790556007805461ff001916610100179055600190565b600754610100900460ff1681565b60008160001903831115610b7857600080fd5b5001905600a165627a7a723058200192a02102b1f9dc72da73c8208f0021b93874d99f61c1723239b3a06d14a4890029',
            gas: '4700000'
        },
        //...........................................................................................
        function(e, contract) {
            console.log(e, contract);
            if (typeof contract.address !== 'undefined') {
                console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                document.getElementById('address').value = contract.address;
                document.getElementById("register").style.visibility = "visible";
            }
        });
}